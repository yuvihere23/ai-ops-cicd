name: Corporate Style CI/CD Pipeline

on:
  workflow_dispatch:  # Allows manual trigger from Python

jobs:
  frontend-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Frontend Dependencies
        run: echo "Installing frontend packages..." && sleep 2

      - name: Build Frontend
        run: echo "Frontend build complete."

  backend-build:
    runs-on: ubuntu-latest
    needs: frontend-build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Backend Dependencies
        run: echo "Installing backend packages..." && sleep 2

      - name: Build Backend
        run: echo "Backend build complete."

  run-tests:
    runs-on: ubuntu-latest
    needs: [frontend-build, backend-build]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Backend Tests
        run: |
          echo "Running backend tests..."
          if grep -q "INJECT_FAIL" backend/test_config.py; then
            echo "FAIL: test_config_loader.py::test_load_config"
            exit 1
          else
            echo "All tests passed!"
          fi

  code-scan:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Secret Scanner
        run: |
          echo "Scanning for secrets..."
          if grep -q "AWS_SECRET_ACCESS_KEY" backend/; then
            echo "SECRET DETECTED!"
            exit 1
          else
            echo "No secrets found."
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: [run-tests, code-scan]
    steps:
      - name: Simulate Deployment
        run: echo "Deploying application..." && sleep 3
